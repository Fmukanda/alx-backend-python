#!/bin/bash
# kubctl-0x02.sh
# Perform blue-green zero-downtime deployment for Django app

set -e  # Exit if any command fails

echo "🚀 Starting Blue-Green Deployment process..."

# Step 1: Deploy Blue version (existing version)
echo "🔹 Applying Blue Deployment..."
kubectl apply -f blue_deployment.yaml

# Step 2: Deploy Green version (new version)
echo "🟢 Applying Green Deployment..."
kubectl apply -f green_deployment.yaml

# Wait for pods to start
echo "⏳ Waiting for pods to initialize..."
sleep 20

# Step 3: Check that both versions are running
echo "🔍 Verifying running pods..."
kubectl get pods -l app=messaging-app -o wide

# Step 4: Check logs of the new version (green)
echo "📜 Checking logs for Green pods..."
GREEN_POD=$(kubectl get pods -l version=green -o jsonpath="{.items[0].metadata.name}")
kubectl logs $GREEN_POD | tail -n 20

# Step 5: Switch service traffic to Green
echo "🔁 Switching traffic to Green version..."
kubectl patch service messaging-app-service -p '{"spec": {"selector": {"app": "messaging-app", "version": "green"}}}'

# Step 6: Verify new traffic routing
echo "✅ Updated service routing:"
kubectl get service messaging-app-service -o yaml | grep version

# Step 7: Optional — Monitor both versions briefly
echo "📊 Current pod status:"
kubectl get pods -l app=messaging-app

echo "🎉 Blue-Green Deployment completed successfully!"
